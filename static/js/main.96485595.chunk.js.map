{"version":3,"sources":["Chat/bg.jpg","ContextApi/StateProvider.js","components/SidebarChat/SidebarChat.js","axios.js","Sidebar/Sidebar.js","Chat/Chat.js","components/Login/Login.js","App.js","serviceWorker.js","ContextApi/reducer.js","index.js"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","SidebarChat","user","useState","lastMsg","setLastMsg","myMessages","currentPeer","dispatch","useEffect","map","msg","console","log","sender","id","receiver","onClick","type","peer","className","Avatar","src","alt","name","message","moment","parseInt","timestamp","format","instance","axios","create","baseURL","Sidebar","users","searchInput","setSearchInput","a","get","then","res","data","filter","u","toLowerCase","includes","trim","getAllUsers","IconButton","DonutLarge","Message","MoreVert","Search","onChange","e","target","placeholder","key","Chat","input","setInput","messages","setMessages","sendMessage","preventDefault","post","receive","array","AttachFile","onSubmit","InsertEmoticon","Send","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Login","classes","modalStyle","open","setOpen","email","setEmail","password","setPassword","setName","loginMode","setLogin","login","document","getElementById","innerText","status","catch","err","signup","Modal","aria-labelledby","aria-describedby","style","root","noValidate","autoComplete","TextField","label","error","variant","length","helperText","App","response","getMessage","channel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","Boolean","window","location","hostname","match","state","action","ReactDOM","render","allUser","currentMessage","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96485595.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.6dc79205.jpg\";","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// This is the data layer\r\nexport const StateContext = createContext();\r\n\r\n// Build A Provider\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n// This is how we use it inside of a component\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SidebarChat.style.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../../ContextApi/StateProvider\";\r\nimport moment from \"moment\";\r\n\r\nfunction SidebarChat({ user }) {\r\n  const [lastMsg, setLastMsg] = useState(\"\");\r\n  const [{ myMessages, currentPeer }, dispatch] = useStateValue();\r\n\r\n  const handleClick = () => {\r\n    dispatch({\r\n      type: \"SET_PEER\",\r\n      peer: user,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    myMessages.map((msg) => {\r\n      console.log(\"yesss\");\r\n      if (msg.sender === user.id || msg.receiver === user.id) {\r\n        setLastMsg(msg);\r\n      }\r\n    });\r\n  }, [myMessages]);\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      className={`sidebarChat d-flex align-items-center ${\r\n        currentPeer?.id === user.id && \"current bg-secondary text-white\"\r\n      }`}\r\n    >\r\n      <div className=\" sidebarChat__avatar mr-3\">\r\n        <Avatar src=\"p\" alt={user.name} />\r\n      </div>\r\n      <div className=\"sidebarChat__info\">\r\n        <h5 className=\"m-0 p-0\">{user.name}</h5>\r\n        <p className=\"m-0 p-0\">\r\n          {lastMsg.sender === user.id ? lastMsg.name : \"You\"} :{\" \"}\r\n          {lastMsg.message}\r\n        </p>\r\n      </div>\r\n      <div className=\"ml-auto\">\r\n        <small>\r\n          {moment(parseInt(lastMsg.timestamp)).format(\"lll\") || \"just now\"}\r\n        </small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:9000\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.style.css\";\r\n\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { Message, DonutLarge, MoreVert, Search } from \"@material-ui/icons\";\r\nimport SidebarChat from \"../components/SidebarChat/SidebarChat\";\r\nimport axios from \"../axios\";\r\nimport { useStateValue } from \"../ContextApi/StateProvider\";\r\n\r\nexport const Sidebar = () => {\r\n  const [{ users, user }, dispatch] = useStateValue();\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [myUsers, setMyuUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = async () => {\r\n      await axios.get(\"/users\").then((res) => {\r\n        dispatch({\r\n          type: \"SET_USERS\",\r\n          users: res.data.users\r\n            .filter((u) => u.id !== user?.id)\r\n            .filter((u) =>\r\n              u.name.toLowerCase().includes(searchInput.trim().toLowerCase())\r\n            ),\r\n        });\r\n      });\r\n    };\r\n    getAllUsers();\r\n  }, [user, searchInput]);\r\n\r\n  useEffect(() => {});\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"p-2 sidebar__header d-flex\">\r\n        <div className=\"mr-2\">\r\n          <Avatar src=\"ak\" alt={user?.name} />\r\n        </div>\r\n        <h2 className=\"text-info\">{user?.name}</h2>\r\n        <div className=\"ml-auto\">\r\n          <IconButton>\r\n            <DonutLarge />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Message />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search my-3\">\r\n        <Search />\r\n        <input\r\n          type=\"text\"\r\n          value={searchInput}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n          placeholder=\"Search or start new chat\"\r\n          className=\"ml-3 search-input outline-none\"\r\n        />\r\n      </div>\r\n      <div className=\"sidebar__chats bg-white\">\r\n        {users?.map((user) => (\r\n          <SidebarChat key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.style.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport bg from \"./bg.jpg\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Search,\r\n  AttachFile,\r\n  MoreVert,\r\n  InsertEmoticon,\r\n  Send,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"../axios\";\r\nimport { useStateValue } from \"../ContextApi/StateProvider\";\r\n\r\nconst Chat = () => {\r\n  const [{ user, currentPeer, myMessages }, dispatch] = useStateValue();\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState();\r\n\r\n  useEffect(() => {\r\n    setMessages(\r\n      myMessages.filter(\r\n        (msg) =>\r\n          msg.sender === currentPeer?.id || msg.receiver === currentPeer?.id\r\n      )\r\n    );\r\n  }, [currentPeer, myMessages]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\"/messages/new\", {\r\n      message: input,\r\n      name: user.name,\r\n      timestamp: moment(),\r\n      receive: false,\r\n      sender: user.id,\r\n      receiver: currentPeer.id,\r\n    });\r\n\r\n    dispatch({\r\n      type: \"SET_MESSAGES\",\r\n      array: [\r\n        ...myMessages,\r\n        {\r\n          message: input,\r\n          name: user.name,\r\n          timestamp: moment(),\r\n          receive: false,\r\n          sender: user.id,\r\n          receiver: currentPeer.id,\r\n        },\r\n      ],\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container chat  py-3\">\r\n      <div className=\"chat__header d-flex align-items-center\">\r\n        <Avatar src=\"A\" alt={currentPeer?.name} />\r\n        <div className=\"chat__headerInfo ml-3\">\r\n          <h4 className=\"m-0 p-0\">{currentPeer?.name}</h4>\r\n          <p className=\"m-0 p-0\">Last seen at...</p>\r\n        </div>\r\n        <div className=\"row ml-auto\">\r\n          <div className=\"chat__headerRight ml-auto\">\r\n            <IconButton>\r\n              <Search />\r\n            </IconButton>\r\n            <IconButton>\r\n              <AttachFile />\r\n            </IconButton>\r\n            <IconButton>\r\n              <MoreVert />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages?.map((message) => (\r\n          <p\r\n            key={message.id}\r\n            className={`message ${message.sender === user.id && \"own-message\"}`}\r\n          >\r\n            <h6 className=\"m-0 p-0\">{message.message}</h6>\r\n            <small className=\"chat__timestamp m-0 ml-auto\">\r\n              <i>\r\n                {moment(parseInt(message.timestamp)).format(\"LT\") || \"Just now\"}\r\n              </i>\r\n            </small>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"mt-auto\">\r\n        <form\r\n          onSubmit={sendMessage}\r\n          className=\"chat__footer d-flex justify-content-center align-items-center\"\r\n        >\r\n          <InsertEmoticon />\r\n          <input\r\n            className=\"outline-none form-control\"\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n          />\r\n          <button type=\"submit\" className={`send-button ${!input && \"d-none\"}`}>\r\n            <Send />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, TextField } from \"@material-ui/core\";\r\nimport axios from \"../../axios\";\r\n\r\nimport { useStateValue } from \"../../ContextApi/StateProvider\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [{ user }, dispatch] = useStateValue();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loginMode, setLogin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setOpen(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.getElementById(\"err\").innerText = \"\";\r\n\r\n    if (!email.trim()) {\r\n      document.getElementById(\"err\").innerText = \"Enter email\";\r\n      return;\r\n    }\r\n    if (!password.trim()) {\r\n      document.getElementById(\"err\").innerText = \"Enter password\";\r\n      return;\r\n    }\r\n\r\n    await axios\r\n      .post(\"/login\", {\r\n        email: email.trim(),\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch({\r\n            type: \"SET_USER\",\r\n            user: res.data.user,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        document.getElementById(\"err\").innerText =\r\n          \"No account or wrong password, please try again\";\r\n      });\r\n  };\r\n  const signup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.getElementById(\"err\").innerText = \"\";\r\n\r\n    if (!name.trim()) {\r\n      document.getElementById(\"err\").innerText = \"Enter You name\";\r\n      return;\r\n    }\r\n\r\n    if (!email.trim()) {\r\n      document.getElementById(\"err\").innerText = \"Enter email\";\r\n      return;\r\n    }\r\n    if (!password.trim()) {\r\n      document.getElementById(\"err\").innerText = \"Enter password\";\r\n      return;\r\n    }\r\n\r\n    await axios\r\n      .post(\"/users/new\", {\r\n        name: name,\r\n        email: email.trim(),\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          dispatch({\r\n            type: \"SET_USER\",\r\n            user: res.data.user,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        document.getElementById(\"err\").innerText =\r\n          \"Sign up fail, please try again\";\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          {loginMode && (\r\n            <div>\r\n              <h2 id=\"simple-modal-title\">\r\n                Login with your Email and Password\r\n              </h2>\r\n              <form\r\n                onSubmit={login}\r\n                className={classes.root}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n              >\r\n                <TextField\r\n                  id=\"outlined-error-helper-text\"\r\n                  label=\"Enter email\"\r\n                  type=\"email\"\r\n                  error={!email.includes(\"@\") && !email.includes(\".\")}\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"form-control mt-2\"\r\n                />\r\n                <TextField\r\n                  error={password.length < 6}\r\n                  id=\"outlined-error-helper-text\"\r\n                  label=\"Enter password (at least 6 character)\"\r\n                  type=\"password\"\r\n                  helperText=\"Must be at least 6 character\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"form-control my-5\"\r\n                />\r\n                <p id=\"err\" className=\"text-danger\"></p>\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  LOG IN\r\n                </button>\r\n              </form>\r\n\r\n              <p>\r\n                No account?{\" \"}\r\n                <button\r\n                  className=\"btn text-danger\"\r\n                  onClick={() => setLogin(false)}\r\n                >\r\n                  Sign Up\r\n                </button>{\" \"}\r\n                here\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {!loginMode && (\r\n            <div>\r\n              <h2 id=\"simple-modal-title\">\r\n                Sign Up with your Email,Password and name\r\n              </h2>\r\n              <form\r\n                onSubmit={signup}\r\n                className={classes.root}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n              >\r\n                <TextField\r\n                  error={name.length < 3}\r\n                  id=\"outlined-error-helper-text\"\r\n                  label=\"Enter your name\"\r\n                  type=\"text\"\r\n                  helperText=\"Must be at least 3 characters\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"form-control my-5\"\r\n                />\r\n                <TextField\r\n                  error={!email.includes(\"@\") && !email.includes(\".\")}\r\n                  id=\"outlined-error-helper-text\"\r\n                  label=\"Enter email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"form-control mt-2\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-error-helper-text\"\r\n                  helperText=\"Must be at least 6 character\"\r\n                  label=\"Enter password\"\r\n                  type=\"password\"\r\n                  error={password.length < 6}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"form-control my-5\"\r\n                />\r\n                <p id=\"err\" className=\"text-danger\"></p>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  SIGN UP\r\n                </button>\r\n              </form>\r\n\r\n              <p>\r\n                Already have a account?\r\n                <button\r\n                  className=\"btn text-danger\"\r\n                  onClick={() => setLogin(true)}\r\n                >\r\n                  Login\r\n                </button>\r\n                here\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport Chat from \"./Chat/Chat\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\nimport Login from \"./components/Login/Login\";\n\nimport { useStateValue } from \"./ContextApi/StateProvider\";\n\nfunction App() {\n  const [{ myMessages, user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const getMessage = async () => {\n      await axios.get(`/messages/${user.id}`).then((response) => {\n        dispatch({\n          type: \"SET_MESSAGES\",\n          array: response.data,\n        });\n      });\n    };\n\n    if (user) {\n      getMessage();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const pusher = new Pusher(\"4bccf108508cfaa75620\", {\n      cluster: \"mt1\",\n    });\n\n    const channel = pusher.subscribe(\"messages\");\n    channel.bind(\"inserted\", function (data) {\n      dispatch({\n        type: \"SET_MESSAGES\",\n        array: [...myMessages, data],\n      });\n    });\n\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [myMessages]);\n\n  return (\n    <div className=\"app\">\n      <Login />\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"row mt-4 app__body\">\n          <div className=\"col-lg-4 col-md-5\">\n            <Sidebar />\n          </div>\n          <div className=\"col-lg-8 col-md-7\">\n            <Chat messages={myMessages} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  myMessages: [],\r\n  allUser: [],\r\n  currentPeer: null,\r\n  currentMessage: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_MESSAGES\":\r\n      return { ...state, myMessages: action.array };\r\n\r\n    case \"SET_USERS\":\r\n      return { ...state, users: action.users };\r\n\r\n    case \"SET_PEER\":\r\n      return { ...state, currentPeer: action.peer };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { StateProvider } from \"./ContextApi/StateProvider\";\nimport reducer, { initialState } from \"./ContextApi/reducer\";\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}